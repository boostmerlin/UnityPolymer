// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: version.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using scg = global::System.Collections.Generic;
namespace Versons.Common {

  #region Messages
  public sealed partial class VersionItem : pb::IMessage<VersionItem> {
    private static readonly pb::MessageParser<VersionItem> _parser = new pb::MessageParser<VersionItem>(() => new VersionItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VersionItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VersionItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VersionItem(VersionItem other) : this() {
      channelId_ = other.channelId_;
      appMinVersion_ = other.appMinVersion_;
      appTargetVersion_ = other.appTargetVersion_;
      appTestVersion_ = other.appTestVersion_;
      resMinVersion_ = other.resMinVersion_;
      resTargetVersion_ = other.resTargetVersion_;
      resTestVersion_ = other.resTestVersion_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VersionItem Clone() {
      return new VersionItem(this);
    }

    private int channelId_;
    /// <summary>
    ///渠道号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChannelId {
      get { return channelId_; }
      set {
        channelId_ = value;
      }
    }

    private int appMinVersion_;
    /// <summary>
    ///app最小版本号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AppMinVersion {
      get { return appMinVersion_; }
      set {
        appMinVersion_ = value;
      }
    }

    private int appTargetVersion_;
    /// <summary>
    ///app目标版本号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AppTargetVersion {
      get { return appTargetVersion_; }
      set {
        appTargetVersion_ = value;
      }
    }

    private int appTestVersion_;
    /// <summary>
    ///app测试版本号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AppTestVersion {
      get { return appTestVersion_; }
      set {
        appTestVersion_ = value;
      }
    }

    private int resMinVersion_;
    /// <summary>
    ///资源最小版本号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ResMinVersion {
      get { return resMinVersion_; }
      set {
        resMinVersion_ = value;
      }
    }

    private int resTargetVersion_;
    /// <summary>
    ///资源目标版本号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ResTargetVersion {
      get { return resTargetVersion_; }
      set {
        resTargetVersion_ = value;
      }
    }

    private int resTestVersion_;
    /// <summary>
    ///资源测试版本号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ResTestVersion {
      get { return resTestVersion_; }
      set {
        resTestVersion_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VersionItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VersionItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChannelId != other.ChannelId) return false;
      if (AppMinVersion != other.AppMinVersion) return false;
      if (AppTargetVersion != other.AppTargetVersion) return false;
      if (AppTestVersion != other.AppTestVersion) return false;
      if (ResMinVersion != other.ResMinVersion) return false;
      if (ResTargetVersion != other.ResTargetVersion) return false;
      if (ResTestVersion != other.ResTestVersion) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChannelId != 0) hash ^= ChannelId.GetHashCode();
      if (AppMinVersion != 0) hash ^= AppMinVersion.GetHashCode();
      if (AppTargetVersion != 0) hash ^= AppTargetVersion.GetHashCode();
      if (AppTestVersion != 0) hash ^= AppTestVersion.GetHashCode();
      if (ResMinVersion != 0) hash ^= ResMinVersion.GetHashCode();
      if (ResTargetVersion != 0) hash ^= ResTargetVersion.GetHashCode();
      if (ResTestVersion != 0) hash ^= ResTestVersion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ChannelId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChannelId);
      }
      if (AppMinVersion != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(AppMinVersion);
      }
      if (AppTargetVersion != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(AppTargetVersion);
      }
      if (AppTestVersion != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(AppTestVersion);
      }
      if (ResMinVersion != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ResMinVersion);
      }
      if (ResTargetVersion != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(ResTargetVersion);
      }
      if (ResTestVersion != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(ResTestVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChannelId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChannelId);
      }
      if (AppMinVersion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AppMinVersion);
      }
      if (AppTargetVersion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AppTargetVersion);
      }
      if (AppTestVersion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AppTestVersion);
      }
      if (ResMinVersion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ResMinVersion);
      }
      if (ResTargetVersion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ResTargetVersion);
      }
      if (ResTestVersion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ResTestVersion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VersionItem other) {
      if (other == null) {
        return;
      }
      if (other.ChannelId != 0) {
        ChannelId = other.ChannelId;
      }
      if (other.AppMinVersion != 0) {
        AppMinVersion = other.AppMinVersion;
      }
      if (other.AppTargetVersion != 0) {
        AppTargetVersion = other.AppTargetVersion;
      }
      if (other.AppTestVersion != 0) {
        AppTestVersion = other.AppTestVersion;
      }
      if (other.ResMinVersion != 0) {
        ResMinVersion = other.ResMinVersion;
      }
      if (other.ResTargetVersion != 0) {
        ResTargetVersion = other.ResTargetVersion;
      }
      if (other.ResTestVersion != 0) {
        ResTestVersion = other.ResTestVersion;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChannelId = input.ReadInt32();
            break;
          }
          case 16: {
            AppMinVersion = input.ReadInt32();
            break;
          }
          case 24: {
            AppTargetVersion = input.ReadInt32();
            break;
          }
          case 32: {
            AppTestVersion = input.ReadInt32();
            break;
          }
          case 40: {
            ResMinVersion = input.ReadInt32();
            break;
          }
          case 48: {
            ResTargetVersion = input.ReadInt32();
            break;
          }
          case 56: {
            ResTestVersion = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class VersionCfg : pb::IMessage<VersionCfg> {
    private static readonly pb::MessageParser<VersionCfg> _parser = new pb::MessageParser<VersionCfg>(() => new VersionCfg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VersionCfg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VersionCfg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VersionCfg(VersionCfg other) : this() {
      version_ = other.version_;
      gameType_ = other.gameType_;
      stVerItem_ = other.stVerItem_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VersionCfg Clone() {
      return new VersionCfg(this);
    }

    private int version_;
    /// <summary>
    ///版本号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    private int gameType_;
    /// <summary>
    ///游戏类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GameType {
      get { return gameType_; }
      set {
        gameType_ = value;
      }
    }

    private static readonly pb::FieldCodec<global::Versons.Common.VersionItem> _repeated_stVerItem_codec
        = pb::FieldCodec.ForMessage(26, global::Versons.Common.VersionItem.Parser);
    private readonly pbc::RepeatedField<global::Versons.Common.VersionItem> stVerItem_ = new pbc::RepeatedField<global::Versons.Common.VersionItem>();
    /// <summary>
    ///渠道版本项
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Versons.Common.VersionItem> StVerItem {
      get { return stVerItem_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VersionCfg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VersionCfg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Version != other.Version) return false;
      if (GameType != other.GameType) return false;
      if(!stVerItem_.Equals(other.stVerItem_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Version != 0) hash ^= Version.GetHashCode();
      if (GameType != 0) hash ^= GameType.GetHashCode();
      hash ^= stVerItem_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Version != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Version);
      }
      if (GameType != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(GameType);
      }
      stVerItem_.WriteTo(output, _repeated_stVerItem_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Version != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Version);
      }
      if (GameType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GameType);
      }
      size += stVerItem_.CalculateSize(_repeated_stVerItem_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VersionCfg other) {
      if (other == null) {
        return;
      }
      if (other.Version != 0) {
        Version = other.Version;
      }
      if (other.GameType != 0) {
        GameType = other.GameType;
      }
      stVerItem_.Add(other.stVerItem_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Version = input.ReadInt32();
            break;
          }
          case 16: {
            GameType = input.ReadInt32();
            break;
          }
          case 26: {
            stVerItem_.AddEntriesFrom(input, _repeated_stVerItem_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
